kubectl create sa dev-pub-admin # create service account
kubectl get secrets | grep dev-pub-admin # get secret for created service account 
kubectl describe secret dev-pub-admin-token-tttc5 # do describe token 
kubectl config set-credentials dev-pub-admin-user --token=<token from secret sa> # set credentials for new user and set token from command above
kubectl config set-cluster dev-pub-cluster --server=https://master-01.k8s.dev.cloud:6443 --insecure-skip-tls-verify=true # add new cluster with url cluster 
kubectl config set-context dev-pub-admin-context --cluster=dev-pub-cluster --user=dev-pub-admin-user # add new context to kubeconfig 
kubectl create clusterrolebinding crb_dev-pub-admin-cr_dev-pub-admin-sa --clusterrole=dev-pub-admin --serviceaccount=default:dev-pub-admin # create clusterrolebinding to link sa and cluster role 
--kubeconfig string # path to kubeconfig 

----------------------------------------------------------------------------------------------------------------------------------------------------------
### how to create new kubeconfig ###
before create new kubeconfig do not forget to create  cluster role and clusterrolebinding to link cluster role and sa

kubectl create sa dev-pub-admin                   # create service account
kubectl get secrets | grep dev-pub-admin          # get secret for created service account 
kubectl describe secret dev-pub-admin-token-tttc5 # do describe token 
kubectl config --kubeconfig=new-kubeconfig set-cluster ift-new-config --server=https://api.k8s.<cloud-url>:6443 --insecure-skip-tls-verify=true
kubectl config --kubeconfig=new-kubeconfig set-credentials dev-pub-admin-ift --token=$(cat token-dev-pub-admin)
kubectl config --kubeconfig=new-kubeconfig set-context ift-context --cluster=ift-new-config --user=dev-pub-admin-ift
echo $KUBECONFIG                                  # check which one kubeconfig do you use 
KUBECONFIG=ift-test                               # set new kubeconfig 
kubectl config view                               # determine which one context do you need 
kubectl config use-context ift-context            # switch to new context
kubectl get ns                                    # check that it works fine
